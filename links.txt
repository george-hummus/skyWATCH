*** SKYWATCH LINKS ***

cloud detection 
- https://www.researchgate.net/publication/334374521_Development_of_an_all-sky_imaging_system_for_cloud_cover_assessment
- https://amt.copernicus.org/articles/11/593/2018/amt-11-593-2018.pdf
- https://sigport.org/sites/default/files/docs/DIY%20Sky%20Imager%20Project_1.pdf
    - https://github.com/FSavoy/DIY-sky-imager
- https://www.researchgate.net/publication/317022372_Cloud_Detection_and_Prediction_with_All_Sky_Cameras
    - https://github.com/tudo-astroparticlephysics/starry_night/tree/master/starry_night

virtualcam - https://github.com/kaustubh-sadekar/VirtualCam

lens distortion - https://learnopencv.com/understanding-lens-distortion/
camera calibration - https://learnopencv.com/camera-calibration-using-opencv/
image formation - https://learnopencv.com/camera-calibration-using-opencv/

distortion tutorial - https://docs.opencv.org/3.4/dc/dbb/tutorial_py_calibration.html

redistorting
- https://stackoverflow.com/questions/66895102/how-to-apply-distortion-on-an-image-using-opencv-or-any-other-library
- https://answers.opencv.org/question/148670/re-distorting-a-set-of-points-after-camera-calibration/
- https://stackoverflow.com/questions/21615298/opencv-distort-back/24231047#24231047
* https://www.reddit.com/r/computervision/comments/mq45m1/calculate_and_use_inverse_of_opencv_distortion/

virtualsky - https://virtualsky.lco.global/embed/custom.html

astronomy camera - https://astronomy-imaging-camera.com/product/asi224mc
allsky lens - https://www.amazon.es/gp/product/B078FGDVBH/ref=ppx_yo_dt_b_asin_title_o09_s00?ie=UTF8&psc=1

controlling astronomy camera
- software manual: https://astronomy-imaging-camera.com/manuals/ASI%20Cameras%20software%20Manual%20Linux%20OSX%20EN.pdf
- https://www.openastroproject.org/oacapture/
- https://indilib.org/forum/general/13-command-line-client-for-indiserver-indi-sx-ccd.html

USB cameras (which astornomy camera doesn't seem to be)
- video capture openCV: https://www.linuxtut.com/en/eda129635816ad871e9d/
- video4linux devices: https://manpages.ubuntu.com/manpages/impish/man1/qv4l2.1.html
- check avalible cams: https://askubuntu.com/questions/348838/how-to-check-available-webcams-from-the-command-line

raspberry pi
- backup: https://magpi.raspberrypi.com/articles/back-up-raspberry-pi (select root partition)
- matplotlib - https://forums.raspberrypi.com/viewtopic.php?t=233037

raspberry pi camera
- https://www.raspberrypi.com/documentation/accessories/camera.html
- https://roboticsbackend.com/raspberry-pi-camera-take-picture/
- https://pyimagesearch.com/2015/03/30/accessing-the-raspberry-pi-camera-with-opencv-and-python/
- https://projects.raspberrypi.org/en/projects/timelapse-setup/5
- https://howchoo.com/pi/how-to-take-a-picture-with-your-raspberry-pi

X11 forwarding
https://raspberrypi.stackexchange.com/questions/114183/raspberry-pi-ssh-x11-forwarding
- https://askubuntu.com/questions/633782/how-to-start-x-application-from-ssh

2D polynomial warping
- paper introudcing theory - https://opg.optica.org/ao/fulltext.cfm?uri=ao-33-30-7141&id=41767
- citation in paper - https://www.academia.edu/3273323/Computer_image_processing_and_recognition
- descriptions:
    - https://neutrium.net/mathematics/least-squares-fitting-of-a-polynomial/
    - https://www.cis.rit.edu/class/simg782/lectures/lecture_18/lec782_04_17.pdf
    - https://eeweb.engineering.nyu.edu/~yao/EL5123/lecture12_ImageWarping.pdf
    - https://www.cs.utexas.edu/~grauman/courses/spring2011/slides/lecture11_fitting.pdf
-fitting in numpy
    - https://www.tutorialspoint.com/get-the-least-squares-fit-of-a-polynomial-to-data-in-python
    - https://numpy.org/doc/stable/reference/generated/numpy.polynomial.polynomial.polyfit.html
- opencv geometric transforms
    - https://docs.opencv.org/4.x/da/d6e/tutorial_py_geometric_transformations.html
    - https://docs.opencv.org/4.x/da/d54/group__imgproc__transform.html#gaf73673a7e8e18ec6963e3774e6a94b87
- H martices in openCV
    - https://docs.opencv.org/2.4/doc/tutorials/features2d/feature_homography/feature_homography.html
    - https://towardsdatascience.com/estimating-a-homography-matrix-522c70ec4b2c
    - https://docs.opencv.org/4.x/d9/d0c/group__calib3d.html#ga4b3841447530523e5272ec05c5d1e411
    - https://docs.opencv.org/4.x/d9/dab/tutorial_homography.html
   
- skyfield documentation: https://rhodesmill.org/skyfield/

- Checking images for similarity with OpenCV: https://stackoverflow.com/questions/11541154/checking-images-for-similarity-with-opencv
- Feature matching tutorial: https://docs.opencv.org/4.x/dc/dc3/tutorial_py_matcher.html

- Image post-processing in openCV:
    - Normalize image brightness: https://linuxtut.com/en/9c9fc6c0e9e8a9d05800/
    - Thresholding: https://docs.opencv.org/4.x/d7/d4d/tutorial_py_thresholding.html
   
- Other
    - Book on multiple view geometry: https://books.google.es/books?hl=en&lr=&id=si3R3Pfa98QC&oi=fnd&pg=PR11&dq=Hartley,+R.,+and+A.+Zisserman,++Multiple+View+Geometry+in+Computer+Vision,++Cambridge+University+Press,+2003.&ots=aTtYlqd69L&sig=mCvdwaHdEX96tKeMO9TYRNBfzGg&redir_esc=y#v=onepage&q=Hartley%2C%20R.%2C%20and%20A.%20Zisserman%2C%20%20Multiple%20View%20Geometry%20in%20Computer%20Vision%2C%20%20Cambridge%20University%20Press%2C%202003.&f=false
    - whitebox image recfification: https://jblindsay.github.io/ghrg/Whitebox/Help/ImageRectification.html
    



    

